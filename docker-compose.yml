version: '3.8'

services:
  frontend:
    image: "tinyurl:frontend"
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "8082:80"
    depends_on:
      - backend1
      - backend2

  backend1:
    image: "tinyurl:backend1"
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - SPRING_PROFILES_ACTIVE=backend1
    ports:
      - "8080:8080"
    volumes:
      - ./backend/demo/target:/app/target
      - ./backend/demo/db:/app/db
      - sqlite-data:/data
    depends_on:
      - redis-server

  backend2:
    image: "tinyurl:backend2"
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - SPRING_PROFILES_ACTIVE=backend2
    ports:
      - "8081:8081"
    volumes:
      - ./backend/demo/target:/app/target
      - ./backend/demo/db:/app/db
      - sqlite-data:/data
    depends_on:
      - redis-server

  redis-server:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - ./backend/demo/redis.conf:/app/redis.conf
      - redis-data:/data
    command: ["redis-server", "/app/redis.conf"]

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend1
      - backend2
volumes:
  sqlite-data:
  redis-data: